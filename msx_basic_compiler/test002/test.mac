; ------------------------------------------------------------------------
; Compiled by MSX-BACON from test.asc
; ------------------------------------------------------------------------
; 
bios_chgmod                     equ 0005Fh
bios_chgclr                     equ 00062h
work_forclr                     equ 0F3E9h
work_bakclr                     equ 0F3EAh
work_bdrclr                     equ 0F3EBh
bios_errhand                    equ 0406Fh
work_buf                        equ 0F55Eh
work_dac_int                    equ 0F7F8h
work_valtyp                     equ 0F663h
bios_fout                       equ 03425h
; BSAVE header -----------------------------------------------------------
        DEFB        0FEh
        DEFW        start_address
        DEFW        end_address
        DEFW        start_address
        ORG         08010h
start_address:
        LD          (save_stack), SP
        LD          DE, program_start
        JP          program_run
program_start:
        LD          HL, 1
        LD          A, L
        CALL        bios_chgmod
        LD          HL, 15
        LD          A, L
        LD          (work_forclr), A
        LD          HL, 4
        LD          A, L
        LD          (work_bakclr), A
        LD          HL, 7
        LD          A, L
        LD          (work_bdrclr), A
        CALL        bios_chgclr
        LD          HL, vars_A
        PUSH        HL
        LD          HL, str_0
        PUSH        HL
        LD          HL, str_1
        POP         DE
        CALL        str_add
        CALL        copy_string
        PUSH        HL
        LD          HL, 100
        LD          (work_dac_int), HL
        LD          A, 2
        LD          (work_valtyp), A
        CALL        str
        POP         DE
        CALL        str_add
        CALL        copy_string
        CALL        copy_string
        POP         DE
        EX          DE, HL
        LD          (HL), E
        INC         HL
        LD          (HL), D
        LD          HL, str_2
        PUSH        HL
        CALL        puts
        POP         HL
        CALL        free_string
        LD          HL, (vars_A)
        CALL        copy_string
        PUSH        HL
        CALL        puts
        POP         HL
        CALL        free_string
        LD          HL, str_3
        PUSH        HL
        CALL        puts
        POP         HL
        CALL        free_string
        LD          HL, (vars_A)
        CALL        copy_string
        LD          A, (HL)
        LD          L, A
        LD          H, 0
        LD          (work_dac_int), HL
        LD          A, 2
        LD          (work_valtyp), A
        CALL        str
        CALL        puts
        LD          HL, str_4
        CALL        puts
program_termination:
        LD          SP, (save_stack)
        RET         
program_run:
        LD          HL, heap_start
        LD          (heap_next), HL
        LD          HL, (save_stack)
        LD          SP, HL
        PUSH        DE
        LD          DE, 256
        XOR         A
        SBC         HL, DE
        LD          (heap_end), HL
        RET         
free_string:
        LD          DE, heap_start
        RST         020h
        RET         C
        LD          DE, (heap_next)
        RST         020h
        RET         NC
        LD          C, (HL)
        LD          B, 0
        INC         BC
        JP          free_heap
free_heap:
        LD          E, L
        LD          D, H
        ADD         HL, BC
        EX          DE, HL
        PUSH        HL
        LD          HL, (heap_next)
        OR          A
        SBC         HL, DE
        LD          C, L
        LD          B, H
        POP         HL
        EX          DE, HL
        LD          (heap_move_size), BC
        LD          (heap_remap_address), HL
        LD          (heap_next), DE
        LD          A, B
        OR          C
        JR          Z, _free_heap_loop1
        LDIR        
        LD          (heap_next), DE
_free_heap_loop1:
        LD          E, (HL)
        INC         HL
        LD          D, (HL)
        PUSH        HL
        LD          HL, (heap_remap_address)
        EX          DE, HL
        RST         020h
        JR          C, _free_heap_loop1_next
        LD          HL, (heap_move_size)
        SBC         HL, DE
        POP         DE
        EX          DE, HL
        LD          (HL), E
        INC         HL
        LD          (HL), D
        PUSH        HL
_free_heap_loop1_next:
        POP         HL
        INC         HL
        LD          DE, varsa_area_end
        RST         020h
        JR          C, _free_heap_loop1
        RET         
allocate_string:
        LD          HL, (heap_next)
        PUSH        HL
        LD          E, A
        LD          D, 0
        ADD         HL, DE
        INC         HL
        LD          DE, (heap_end)
        RST         020h
        JR          NC, _allocate_string_error
        LD          (heap_next), HL
        POP         HL
        LD          (HL), A
        RET         
_allocate_string_error:
        LD          E, 7
        JP          bios_errhand
str_add:
        PUSH        DE
        PUSH        HL
        LD          C, (HL)
        LD          A, (DE)
        ADD         A, C
        JR          C, _str_add_error
        PUSH        HL
        EX          DE, HL
        LD          C, (HL)
        INC         HL
        LD          DE, work_buf+1
        LD          B, 0
        LDIR        
        POP         HL
        LD          C, (HL)
        INC         HL
        LDIR        
        LD          (work_buf), A
        POP         HL
        CALL        free_string
        POP         HL
        CALL        free_string
        LD          A, (work_buf)
        CALL        allocate_string
        PUSH        HL
        LD          DE, work_buf
        EX          DE, HL
        LD          C, (HL)
        LD          B, 0
        INC         BC
        LDIR        
        POP         HL
        RET         
_str_add_error:
        LD          E, 15
        JP          bios_errhand
copy_string:
        LD          A, (HL)
        PUSH        HL
        CALL        allocate_string
        POP         DE
        PUSH        HL
        EX          DE, HL
        LD          C, (HL)
        LD          B, 0
        INC         BC
        LDIR        
        POP         HL
        RET         
str:
        CALL        bios_fout
        DEC         HL
        PUSH        HL
        XOR         A
        LD          B, A
_str_loop:
        INC         HL
        CP          (HL)
        JR          Z, _str_loop_exit
        INC         B
        JR          _str_loop
_str_loop_exit:
        LD          (HL), 32
        POP         HL
        INC         B
        LD          (HL), B
        RET         
puts:
        LD          B, (HL)
_puts_loop:
        INC         HL
        LD          A, (HL)
        RST         018h
        DJNZ        _puts_loop
        RET         
str_0:
        DEFB        005h, 048h, 045h, 04Ch, 04Ch, 04Fh
str_1:
        DEFB        007h, 020h, 057h, 04Fh, 052h, 04Ch, 044h, 021h
str_2:
        DEFB        002h, 041h, 03Dh
str_3:
        DEFB        001h, 03Ah
str_4:
        DEFB        002h, 00Dh, 00Ah
save_stack:
        DEFW        0
heap_next:
        DEFW        0
heap_end:
        DEFW        0
heap_move_size:
        DEFW        0
heap_remap_address:
        DEFW        0
var_area_start:
var_area_end:
vars_area_start:
vars_A:
        DEFW        0
vars_area_end:
vara_area_start:
vara_area_end:
varsa_area_start:
varsa_area_end:
heap_start:
end_address:
