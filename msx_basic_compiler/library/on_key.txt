KEY LIST
	786Ch ... CP 93h (LIST の中間コード)
	7870h に入っていくらしい。

KEY ON
	78B3h ... CP 95h (ON の中間コード)
	78A6h に入っていくらしい。

KEY OFF
	78B7h ... CP EBh (OFF の中間コード)
	78AAh に入っていくらしい。

	78AA: RST 10h (CALL CHRGTR: 1文字取得)
	→ JP 00CCh (ERAFNK)

===============================================================================
; 割り込みフラグ処理ルーチン ( ON KEY )
; svarf_on_key0_mode + 0 : 0x00:OFF/STOP, 0x01:ON
; svarf_on_key0_mode + 1 : 00h:なし, FFh:割り込み発生
; svarf_on_key0_mode + 2 : 割り込み内で使用
; svarf_on_key0_mode + 3 : 割り込み内で使用

		LD		HL, svarf_on_key01_mode
		LD		DE, svari_on_key01_line
		LD		B, 0x05
_on_key_loop1:
		; svarf_on_key0_mode[+00][+01] を確認する
		LD		A, [HL]						; 00h: OFF/STOP, 01h: ON
		INC		HL
		AND		A, [HL]						; 00h:なし, FFh:割り込み発生
		JR		Z, _skip_key1				; OFF/STOP または 割り込み非発生 なら処理をスキップする
		LD		[HL], 0						; [+01] を 0 にする

		; svari_on_key0_line を CALL する
		PUSH	HL								; svarf_on_key01_mode + 01 を保存
		EX		DE, HL
		LD		E, [HL]
		INC		HL
		LD		D, [HL]
		DEC		HL
		EX		DE, HL
		PUSH	DE								; svari_on_key01_line 保存
		PUSH	BC
		CALL	jp_hl
		POP		BC
		POP		DE
		POP		HL

		; 次へ
_skip_key1:
		INC		DE
		INC		DE
		INC		HL
		INC		HL
		INC		HL
		DJNZ	_on_key_loop1

; ===============================================================================
; 割り込みルーチン ( ON KEY )
; svarf_on_keyXX_mode + 0 : 0x00:OFF/STOP, 0xFF:ON
; svarf_on_keyXX_mode + 1 : 0:なし, 非0:割り込み発生
; svarf_on_keyXX_mode + 2 : 前回の押下状態 0:解放, 非0:押下
; svarf_on_keyXX_mode + 3 : -

		IN		A, [0xAA]
		AND		A, 0xF0
		OR		A, 6
		LD		B, A
		OUT		[0xAA], A
		IN		A, [0xA9]			; C = キーマトリクス Y6
		OR		A, 0x1E				; [F3][F2][F1][-][-][-][-][SHIFT]
		RRCA						; [SHIFT][F3][F2][F1][-][-][-][-]		SHIFTは全キーでチェックするので符号ビットに置く
		LD		C, A
		LD		A, B
		INC		A
		OUT		[0xAA], A
		IN		A, [0xA9]			; A = キーマトリクス Y7
		OR		A, 0xFC				; [-][-][-][-][-][-][F5][F4]
		AND		A, C				; [SHIFT][F3][F2][F1][-][-][F5][F4]
		LD		C, A

		LD		HL, svarf_on_key06_mode
		LD		B, 0x90
		CALL	_on_key_sub
		LD		HL, svarf_on_key07_mode
		LD		B, 0xA0
		CALL	_on_key_sub
		LD		HL, svarf_on_key08_mode
		LD		B, 0xC0
		CALL	_on_key_sub
		LD		HL, svarf_on_key09_mode
		LD		B, 0x81
		CALL	_on_key_sub
		LD		HL, svarf_on_key10_mode
		LD		B, 0x82
		CALL	_on_key_sub

		LD		A, C
		XOR		A, 0x80
		LD		C, A

		LD		HL, svarf_on_key01_mode
		LD		B, 0x90
		CALL	_on_key_sub
		LD		HL, svarf_on_key02_mode
		LD		B, 0xA0
		CALL	_on_key_sub
		LD		HL, svarf_on_key03_mode
		LD		B, 0xC0
		CALL	_on_key_sub
		LD		HL, svarf_on_key04_mode
		LD		B, 0x81
		CALL	_on_key_sub
		LD		HL, svarf_on_key05_mode
		LD		B, 0x82
		CALL	_on_key_sub

		ここで終わり

_on_key_sub:						; C = キーマトリクス値, B = マスク値, HL = テーブルのアドレス, Cは維持
		LD		A, [HL]				; 0=OFF/STOP, FFh=ON
		AND		A, B				; OFF/STOP なら、0 になる。ON ならマスク値になる。
		INC		HL					; フラグ不変
		INC		HL					; フラグ不変
		LD		D, [HL]				; フラグ不変 前回の状態(00h or FFh)を保護
		LD		[HL], 0				; フラグ不変 前回の状態を「押されてない状態」にする
		RET		Z					; OFF/STOP なら戻る
		AND		A, C				; 押されていれば、0 になる。押されていなければ 非0 になる
		RET		NZ					; 押されてない状態なら、ここで戻る
		DEC		A
		LD		[HL], A				; 前回の状態を「押されている状態(FFh)」にする
		AND		A, D				; A = D, かつ D が 00h か FFh かを判断、00h なら割り込み発生タイミング
		RET		NZ					; FFh なら、ここで戻る
		DEC		HL
		DEC		A
		LD		[HL], A				; 割り込み発生を示す FFh を書き込む
		RET
