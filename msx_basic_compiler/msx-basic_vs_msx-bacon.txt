MSX-BASICとの違い
===============================================================================
　MSX-BACON は、MSX-BASIC とほぼ同じ記述で、より高速に動作するプログラムを生成
出来ることを一番の目的に作られています。
　そのために、いくつか割り切りが入っています。
　このテキストは、その割り切りによって発生する差異についてまとめています。

1. 数値演算
　各数式の各項は、コンパイル時に型を決めてしまいます。
　演算の度に型の判定を行う処理を省くためです。
　MSX-BASIC では、演算結果によって柔軟に型を変えています。
　MSX-BACON では、コンパイル時に型を決め打つために、一部の演算において、正確な
結果が得られないケースがあります。

1.1. ABS
　ABS関数は、引数の型と同じ型であると決めてしまいます。
　そのため、整数の引数である -32768 を与えると、演算結果 32768 は整数型の範囲
　-32768 〜 32767 を越えてしまうため、正しい結果が得られません。

　A=ABS(-32768)
　PRINT A

　-32768

1.2. オーバーフロー
　整数演算の大半は、サブルーチンコールでは無く、Z80 の等価な演算命令に変換します。
　演算命令に置き換わる場合、オーバーフローチェックを行いません。

　100 DEFINTA-Z
　110 A=A+1:GOTO 110

　MSX-BACON では、このループは無限に続きます。
　ただし、一部の整数演算と、浮動小数点演算に関しては、MathPack と呼ばれる 
　MSX の BIOS に組み込まれている演算ルーチン群を利用します。そして、MathPack は
　BASIC のエラーチェックが入っているため、MathPack を使うケースでは、MSX-BASICと
　同様のエラーが発生します。
